
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.11.0
 * Query Engine version: d9a4c5988f480fa576d43970d5a23641aa77bc9c
 */
Prisma.prismaVersion = {
  client: "4.11.0",
  engine: "d9a4c5988f480fa576d43970d5a23641aa77bc9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AlunosScalarFieldEnum = makeEnum({
  id_aluno: 'id_aluno',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  nivel_de_acesso: 'nivel_de_acesso'
});

exports.Prisma.AtividadesScalarFieldEnum = makeEnum({
  id_atividade: 'id_atividade',
  id_turma: 'id_turma',
  titulo: 'titulo',
  descricao: 'descricao',
  prazo: 'prazo',
  pontos_conclusao: 'pontos_conclusao'
});

exports.Prisma.Atividades_concluidasScalarFieldEnum = makeEnum({
  id_concluida: 'id_concluida',
  id_atividade: 'id_atividade',
  id_aluno: 'id_aluno',
  data_concluida: 'data_concluida',
  arquivo: 'arquivo'
});

exports.Prisma.PontosScalarFieldEnum = makeEnum({
  id_ponto: 'id_ponto',
  id_aluno: 'id_aluno',
  id_turma: 'id_turma',
  qtd: 'qtd'
});

exports.Prisma.PremiosScalarFieldEnum = makeEnum({
  id_premio: 'id_premio',
  id_turma: 'id_turma',
  descricao: 'descricao',
  pontos_requeridos: 'pontos_requeridos'
});

exports.Prisma.ProfessoresScalarFieldEnum = makeEnum({
  id_prof: 'id_prof',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  nivel_de_acesso: 'nivel_de_acesso'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TurmasScalarFieldEnum = makeEnum({
  id_turma: 'id_turma',
  nome: 'nome',
  codigo: 'codigo'
});


exports.Prisma.ModelName = makeEnum({
  alunos: 'alunos',
  professores: 'professores',
  atividades: 'atividades',
  atividades_concluidas: 'atividades_concluidas',
  turmas: 'turmas',
  premios: 'premios',
  pontos: 'pontos'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
