{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./style\";\nimport CardPerfilAluno from \"../../../components/cardPerfilAluno/cardPerfilAluno\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PerfilAluno(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    Id_aluno = _useState2[0],\n    SetId_aluno = _useState2[1];\n  var _useState3 = useState({\n      \"turma\": []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    info = _useState4[0],\n    setInfo = _useState4[1];\n  var obterItem = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var userString = yield AsyncStorage.getItem('nome');\n        if (userString !== null) {\n          var user = JSON.parse(userString);\n          SetId_aluno(user.id_aluno);\n          dados();\n        } else {\n          console.log('Nenhum user encontrado.');\n        }\n      } catch (error) {\n        console.log('Erro ao obter o item:', error);\n      }\n    });\n    return function obterItem() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var myInterval = setInterval(function () {\n    dados();\n  }, 50000);\n  useEffect(function () {\n    obterItem();\n    myInterval;\n  }, []);\n  function dados() {\n    try {\n      fetch('http://localhost:3000/alunos/readOne/' + Id_aluno).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        setInfo(data);\n        console.log(data);\n      }).catch(function (error) {\n        console.log('Erro ao processar a resposta da requisição:', error);\n      });\n    } catch (error) {\n      console.log('Erro durante a requisição:', error);\n    }\n  }\n  var menu = function menu() {\n    navigation.openDrawer();\n    clearInterval(myInterval);\n  };\n  var voltar = function voltar() {\n    navigation.navigate('Login');\n    clearInterval(myInterval);\n  };\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtEntrar,\n        children: \"Perfil\"\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        onPress: function onPress() {\n          voltar();\n        },\n        children: \"Sair\"\n      })]\n    }), _jsx(View, {\n      style: styles.dados,\n      children: info.turma.map(function (item, index) {\n        return _jsx(View, {\n          children: _jsx(CardPerfilAluno, {\n            item: item\n          })\n        }, index);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["AsyncStorage","useState","useEffect","View","Text","TouchableOpacity","Image","ImageBackground","styles","CardPerfilAluno","jsx","_jsx","jsxs","_jsxs","PerfilAluno","_ref","navigation","_useState","_useState2","_slicedToArray","Id_aluno","SetId_aluno","_useState3","_useState4","info","setInfo","obterItem","_ref2","_asyncToGenerator","userString","getItem","user","JSON","parse","id_aluno","dados","console","log","error","apply","arguments","myInterval","setInterval","fetch","then","resp","json","data","catch","menu","openDrawer","clearInterval","voltar","navigate","children","source","require","resizeMode","style","imagem","divizinha","onPress","image","txtEntrar","txtSair","turma","map","item","index"],"sources":["C:/Users/Andreina/Desktop/SENAI/ClassQuest/mobile/classquest/src/pages/Aluno/perfilAluno/perfilAluno.js"],"sourcesContent":["// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n// import { useState, useEffect } from \"react\";\r\n// import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\n// import styles from './style'\r\n// import CardPerfilAluno from '../../../components/cardPerfilAluno/cardPerfilAluno'\r\n\r\n// export default function PerfilAluno({ navigation }) {\r\n//     const [Id_aluno, SetId_aluno] = useState()\r\n//     const [info, setInfo] = useState({ \"turma\": [] })\r\n\r\n//     const obterItem = async () => {\r\n//         try {\r\n//             const userString = await AsyncStorage.getItem('nome');\r\n//             if (userString !== null) {\r\n//                 const user = JSON.parse(userString);\r\n//                 SetId_aluno(user.id_aluno);\r\n//             } else {\r\n//                 console.log('Nenhum user encontrado.');\r\n//             }\r\n//         } catch (error) {\r\n//             console.log('Erro ao obter o item:', error);\r\n//         }\r\n//     };\r\n\r\n\r\n//     const myInterval = setInterval(() => {\r\n//         dados()\r\n//     }, 50000)\r\n\r\n//     useEffect(() => {\r\n//         obterItem()\r\n//         // dados()\r\n//         myInterval\r\n//     }, []);\r\n\r\n//     function dados() {\r\n//         try {\r\n//           fetch('http://localhost:3000/alunos/readOne/' + Id_aluno)\r\n//             .then((resp) => {\r\n//               return resp.json();\r\n//             })\r\n//             .then((data) => {\r\n//               setInfo(data);\r\n//               console.log(data);\r\n//             })\r\n//             .catch((error) => {\r\n//               console.log('Erro ao processar a resposta da requisição:', error);\r\n//             });\r\n//         } catch (error) {\r\n//           console.log('Erro durante a requisição:', error);\r\n//         }\r\n//       }\r\n\r\n//     const menu = () => {\r\n//         navigation.openDrawer();\r\n//         clearInterval(myInterval)\r\n//     }\r\n\r\n//     const voltar = () => {\r\n//         navigation.navigate('Login')\r\n//         clearInterval(myInterval)\r\n//     }\r\n//     return (\r\n//         <View>\r\n//             <ImageBackground source={require('../../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n//             <View style={styles.divizinha}>\r\n//                 <TouchableOpacity onPress={() => { menu() }}>\r\n//                     <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n//                 </TouchableOpacity>\r\n//                 <Text style={styles.txtEntrar}>Perfil</Text>\r\n//                 <Text style={styles.txtSair} onPress={() => { voltar() }}>Sair</Text>\r\n//             </View>\r\n//             <View style={styles.dados}>\r\n//                 {\r\n//                     info.turma.map((item, index) => {\r\n//                         return (\r\n//                             <View key={index}>\r\n//                                 <CardPerfilAluno item={item} />\r\n//                             </View>\r\n\r\n//                         )\r\n//                     })\r\n//                 }\r\n//             </View>\r\n//         </View>\r\n//     )\r\n// }\r\n\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useState, useEffect } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport styles from './style'\r\nimport CardPerfilAluno from '../../../components/cardPerfilAluno/cardPerfilAluno'\r\n\r\nexport default function PerfilAluno({ navigation }) {\r\n    const [Id_aluno, SetId_aluno] = useState()\r\n    const [info, setInfo] = useState({ \"turma\": [] })\r\n\r\n    const obterItem = async () => {\r\n        try {\r\n            const userString = await AsyncStorage.getItem('nome');\r\n            if (userString !== null) {\r\n                const user = JSON.parse(userString);\r\n                SetId_aluno(user.id_aluno);\r\n                dados(); // Chamar a função dados() após obter o Id_aluno\r\n            } else {\r\n                console.log('Nenhum user encontrado.');\r\n            }\r\n        } catch (error) {\r\n            console.log('Erro ao obter o item:', error);\r\n        }\r\n    };\r\n\r\n    const myInterval = setInterval(() => {\r\n        dados()\r\n    }, 50000)\r\n\r\n    useEffect(() => {\r\n        obterItem();\r\n        myInterval;\r\n    }, []);\r\n\r\n    function dados() {\r\n        try {\r\n          fetch('http://localhost:3000/alunos/readOne/' + Id_aluno)\r\n            .then((resp) => {\r\n              return resp.json();\r\n            })\r\n            .then((data) => {\r\n              setInfo(data);\r\n              console.log(data);\r\n            })\r\n            .catch((error) => {\r\n              console.log('Erro ao processar a resposta da requisição:', error);\r\n            });\r\n        } catch (error) {\r\n          console.log('Erro durante a requisição:', error);\r\n        }\r\n    }\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n        clearInterval(myInterval)\r\n    }\r\n\r\n    const voltar = () => {\r\n        navigation.navigate('Login')\r\n        clearInterval(myInterval)\r\n    }\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtEntrar}>Perfil</Text>\r\n                <Text style={styles.txtSair} onPress={() => { voltar() }}>Sair</Text>\r\n            </View>\r\n            <View style={styles.dados}>\r\n                {\r\n                    info.turma.map((item, index) => {\r\n                        return (\r\n                            <View key={index}>\r\n                                <CardPerfilAluno item={item} />\r\n                            </View>\r\n                        )\r\n                    })\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}