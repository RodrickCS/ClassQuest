{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var navigation = _ref.navigation;\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  var id_aluno = JSON.parse(localStorage.getItem('id_aluno'));\n  console.log(user);\n  function info() {\n    var form = {\n      email: Email,\n      senha: Senha\n    };\n    var uri = \"http://localhost:3000/readOne/\" + id_aluno;\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(uri, options).then(function (resp) {\n      if (resp.ok) {\n        return resp.json();\n      } else if (resp.status === 401) {\n        setMsg(\"Senha incorreta\");\n        throw new Error(\"Senha incorreta\");\n      } else if (resp.status === 404) {\n        setMsg(\"Usuário não encontrado\");\n        throw new Error(\"Usuário não encontrado\");\n      } else {\n        setMsg(\"Erro interno do servidor\");\n        throw new Error(\"Erro interno do servidor\");\n      }\n    }).then(function (data) {\n      console.log(data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  function update() {\n    var form = {\n      email: Email,\n      senha: Senha\n    };\n    var uri = \"http://localhost:3000/readOne/\" + id_aluno;\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(uri, options).then(function (resp) {\n      if (resp.ok) {\n        return resp.json();\n      } else if (resp.status === 401) {\n        setMsg(\"Senha incorreta\");\n        throw new Error(\"Senha incorreta\");\n      } else if (resp.status === 404) {\n        setMsg(\"Usuário não encontrado\");\n        throw new Error(\"Usuário não encontrado\");\n      } else {\n        setMsg(\"Erro interno do servidor\");\n        throw new Error(\"Erro interno do servidor\");\n      }\n    }).then(function (data) {\n      console.log(data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  function del() {\n    var form = {\n      email: Email,\n      senha: Senha\n    };\n    var uri = \"http://localhost:3000/readOne/\" + id_aluno;\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(uri, options).then(function (resp) {\n      if (resp.ok) {\n        return resp.json();\n      } else if (resp.status === 401) {\n        setMsg(\"Senha incorreta\");\n        throw new Error(\"Senha incorreta\");\n      } else if (resp.status === 404) {\n        setMsg(\"Usuário não encontrado\");\n        throw new Error(\"Usuário não encontrado\");\n      } else {\n        setMsg(\"Erro interno do servidor\");\n        throw new Error(\"Erro interno do servidor\");\n      }\n    }).then(function (data) {\n      console.log(data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        children: \"Sair\"\n      })]\n    }), _jsx(View, {\n      style: styles.dados,\n      children: _jsx(TextInput, {\n        style: styles.inputzinho,\n        placeholder: \"Digite a senha\",\n        value: Senha,\n        onChangeText: function onChangeText(val1) {\n          setSenha(val1);\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["styles","jsx","_jsx","jsxs","_jsxs","Perfil","_ref","navigation","menu","openDrawer","user","JSON","parse","localStorage","getItem","id_aluno","console","log","info","form","email","Email","senha","Senha","uri","options","method","headers","body","stringify","fetch","then","resp","ok","json","status","setMsg","Error","data","catch","error","update","del","View","children","ImageBackground","source","require","resizeMode","style","imagem","divizinha","TouchableOpacity","onPress","Image","image","Text","txtSair","dados","TextInput","inputzinho","placeholder","value","onChangeText","val1","setSenha"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/perfilAluno/perfilAluno.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport styles from './style'\r\n\r\nexport default function Perfil({ navigation }) {\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    var id_aluno = JSON.parse(localStorage.getItem('id_aluno'))\r\n\r\n    console.log(user)\r\n\r\n    function info() {\r\n        let form = {\r\n            email: Email,\r\n            senha: Senha,\r\n        };\r\n\r\n        let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n\r\n        fetch(uri, options)\r\n            .then((resp) => {\r\n                if (resp.ok) {\r\n                    return resp.json();\r\n                } else if (resp.status === 401) {\r\n                    setMsg(\"Senha incorreta\")\r\n                    throw new Error(\"Senha incorreta\");\r\n                } else if (resp.status === 404) {\r\n                    setMsg(\"Usuário não encontrado\")\r\n                    throw new Error(\"Usuário não encontrado\");\r\n                } else {\r\n                    setMsg(\"Erro interno do servidor\")\r\n                    throw new Error(\"Erro interno do servidor\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    function update() {\r\n        let form = {\r\n            email: Email,\r\n            senha: Senha,\r\n        };\r\n\r\n        let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n\r\n        fetch(uri, options)\r\n            .then((resp) => {\r\n                if (resp.ok) {\r\n                    return resp.json();\r\n                } else if (resp.status === 401) {\r\n                    setMsg(\"Senha incorreta\")\r\n                    throw new Error(\"Senha incorreta\");\r\n                } else if (resp.status === 404) {\r\n                    setMsg(\"Usuário não encontrado\")\r\n                    throw new Error(\"Usuário não encontrado\");\r\n                } else {\r\n                    setMsg(\"Erro interno do servidor\")\r\n                    throw new Error(\"Erro interno do servidor\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    function del() {\r\n        let form = {\r\n            email: Email,\r\n            senha: Senha,\r\n        };\r\n\r\n        let uri =`http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n\r\n        fetch(uri, options)\r\n            .then((resp) => {\r\n                if (resp.ok) {\r\n                    return resp.json();\r\n                } else if (resp.status === 401) {\r\n                    setMsg(\"Senha incorreta\")\r\n                    throw new Error(\"Senha incorreta\");\r\n                } else if (resp.status === 404) {\r\n                    setMsg(\"Usuário não encontrado\")\r\n                    throw new Error(\"Usuário não encontrado\");\r\n                } else {\r\n                    setMsg(\"Erro interno do servidor\")\r\n                    throw new Error(\"Erro interno do servidor\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtSair}>Sair</Text>\r\n            </View>\r\n            <View style={styles.dados}>\r\n            <TextInput style={styles.inputzinho}placeholder=\"Digite a senha\" value={Senha}\r\n                    onChangeText={(val1) => {\r\n                        setSenha(val1)\r\n                    }}/>\r\n            </View>\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}