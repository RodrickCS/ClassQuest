{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from \"react-native-paper\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var navigation = _ref.navigation;\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  var id_alu = user.id_aluno;\n  console.log(user);\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtEntrar,\n        children: \"Perfil\"\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        children: \"Sair\"\n      })]\n    }), _jsx(View, {\n      style: styles.dados,\n      children: _jsxs(View, {\n        style: styles.turmas,\n        children: [_jsx(View, {\n          style: styles.turma,\n          children: _jsxs(TouchableOpacity, {\n            style: styles.turminha,\n            children: [_jsx(Image, {\n              style: styles.image,\n              source: require(\"../../../assets/favicon.png\")\n            }), _jsx(Text, {\n              style: styles.titulo,\n              children: \"turminha\"\n            }), _jsx(Image, {\n              style: styles.image2,\n              source: require(\"../../../assets/setaBaixo.png\")\n            })]\n          })\n        }), _jsxs(TouchableOpacity, {\n          style: styles.turma,\n          children: [_jsx(Image, {\n            style: styles.image,\n            source: require(\"../../../assets/favicon.png\")\n          }), _jsx(Text, {\n            style: styles.titulo,\n            children: \"turminha\"\n          }), _jsx(Image, {\n            style: styles.image2,\n            source: require(\"../../../assets/setaBaixo.png\")\n          })]\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","styles","jsx","_jsx","jsxs","_jsxs","Perfil","_ref","navigation","menu","openDrawer","user","JSON","parse","localStorage","getItem","id_alu","id_aluno","console","log","View","children","ImageBackground","source","require","resizeMode","style","imagem","divizinha","TouchableOpacity","onPress","Image","image","Text","txtEntrar","txtSair","dados","turmas","turma","turminha","titulo","image2"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/perfilProf/perfilProf.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport { TextInput } from \"react-native-paper\";\r\nimport styles from './style'\r\n\r\nexport default function Perfil({ navigation }) {\r\n\r\n    // const [id_aluno, setId_aluno] = useState('');\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    var id_alu = user.id_aluno\r\n    // var id_aluno = JSON.parse(localStorage.getItem('id_aluno'))\r\n\r\n    console.log(user)\r\n\r\n    // function info() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function update() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function del() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri =`http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtEntrar}>Perfil</Text>\r\n                <Text style={styles.txtSair}>Sair</Text>\r\n            </View>\r\n            <View style={styles.dados}>\r\n                <View style={styles.turmas}>\r\n                    <View style={styles.turma}\r\n                    >\r\n                    <TouchableOpacity style={styles.turminha}>\r\n                        <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                        <Text style={styles.titulo}>turminha</Text>\r\n                        <Image style={styles.image2} source={require('../../../assets/setaBaixo.png')} />\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                    \r\n                    <TouchableOpacity style={styles.turma}>\r\n                        <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                        <Text style={styles.titulo}>turminha</Text>\r\n                        <Image style={styles.image2} source={require('../../../assets/setaBaixo.png')} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            {/* <TouchableOpacity style={styles.botaozinho}>\r\n                <Text style={styles.txtbutton}>ok</Text>\r\n            </TouchableOpacity> */}\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}