{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var navigation = _ref.navigation;\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  var id_prof = JSON.parse(localStorage.getItem('id_prof'));\n  console.log(user);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        children: \" Perfilzinho \"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["styles","jsx","_jsx","jsxs","_jsxs","Perfil","_ref","navigation","menu","openDrawer","user","JSON","parse","localStorage","getItem","id_prof","console","log","View","children","TouchableOpacity","onPress","Image","style","image","source","require","Text"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/perfilProf/perfilProf.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport styles from './style'\r\n\r\nexport default function Perfil({ navigation }) {\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    // var id_aluno = JSON.parse(localStorage.getItem('id_aluno'))\r\n    var id_prof = JSON.parse(localStorage.getItem('id_prof'))\r\n\r\n    console.log(user)\r\n\r\n    // function info() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 setMsg(\"Senha incorreta\")\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 setMsg(\"Usuário não encontrado\")\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 setMsg(\"Erro interno do servidor\")\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function update() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_prof}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 setMsg(\"Senha incorreta\")\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 setMsg(\"Usuário não encontrado\")\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 setMsg(\"Erro interno do servidor\")\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function del() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri =`http://localhost:3000/readOne/${id_prof}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 setMsg(\"Senha incorreta\")\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 setMsg(\"Usuário não encontrado\")\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 setMsg(\"Erro interno do servidor\")\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <View>\r\n            <View >\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text> Perfilzinho </Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}"],"mappings":";;;;;AACA,OAAOA,MAAM;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5B,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEvC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACfD,UAAU,CAACE,UAAU,CAAC,CAAC;EAC3B,CAAC;EAED,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEnD,IAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EAEzDE,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EAuHjB,OACIR,IAAA,CAACgB,IAAI;IAAAC,QAAA,EACDf,KAAA,CAACc,IAAI;MAAAC,QAAA,GACDjB,IAAA,CAACkB,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;UAAEb,IAAI,CAAC,CAAC;QAAC,CAAE;QAAAW,QAAA,EACxCjB,IAAA,CAACoB,KAAK;UAACC,KAAK,EAAEvB,MAAM,CAACwB,KAAM;UAACC,MAAM,EAAEC,OAAO,8BAA8B;QAAE,CAAE;MAAC,CAChE,CAAC,EACnBxB,IAAA,CAACyB,IAAI;QAAAR,QAAA,EAAC;MAAa,CAAM,CAAC;IAAA,CACxB;EAAC,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}