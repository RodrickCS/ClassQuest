{"ast":null,"code":"import { createDrawerNavigator } from '@react-navigation/drawer';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nvar Drawer = createDrawerNavigator();\nimport Perfil from \"../../pages/\";\nimport Aluno from \"../../pages/alunoHome/alunoHome\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Menu(_ref) {\n  var navigation = _ref.navigation;\n  function login() {\n    var form = {\n      email: Email,\n      senha: Senha\n    };\n    var uri = checked === \"professor\" ? \"http://localhost:3000/professores/login\" : \"http://localhost:3000/alunos/login\";\n    var path = checked === \"professor\" ? \"MenuProfessor\" : \"MenuAluno\";\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(uri, options).then(function (resp) {\n      if (resp.ok) {\n        return resp.json();\n      } else if (resp.status === 401) {\n        setMsg(\"Senha incorreta\");\n        throw new Error(\"Senha incorreta\");\n      } else if (resp.status === 404) {\n        setMsg(\"Usuário não encontrado\");\n        throw new Error(\"Usuário não encontrado\");\n      } else {\n        setMsg(\"Erro interno do servidor\");\n        throw new Error(\"Erro interno do servidor\");\n      }\n    }).then(function (data) {\n      console.log(data);\n      AsyncStorage.setItem(\"nome\", JSON.stringify(data.info));\n      AsyncStorage.setItem(\"id_aluno\", data.info.id_aluno);\n      AsyncStorage.setItem(\"token\", data.token);\n      navigation.navigate(path);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  var user = JSON.parse(localStorage.getItem('nome'));\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \"Home\",\n    children: [_jsx(Drawer.Screen, {\n      name: \"Perfil\",\n      component: Perfil,\n      options: {\n        drawerLabel: function drawerLabel() {\n          return _jsxs(Text, {\n            children: [\" Ol\\xE1, \", user.nome, \" \"]\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Aluno,\n      options: {\n        drawerLabel: function drawerLabel(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(Text, {\n            style: {\n              color: focused ? '#000' : '#aaa'\n            },\n            children: \"Home\"\n          });\n        },\n        drawerIcon: function drawerIcon(_ref3) {\n          var focused = _ref3.focused,\n            color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: focused ? 'home' : 'home-outline',\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createDrawerNavigator","Text","Ionicons","Drawer","Perfil","Aluno","jsxs","_jsxs","jsx","_jsx","Menu","_ref","navigation","login","form","email","Email","senha","Senha","uri","checked","path","options","method","headers","body","JSON","stringify","fetch","then","resp","ok","json","status","setMsg","Error","data","console","log","AsyncStorage","setItem","info","id_aluno","token","navigate","catch","error","user","parse","localStorage","getItem","Navigator","screenOptions","headerShown","initialRouteName","children","Screen","name","component","drawerLabel","nome","_ref2","focused","style","color","drawerIcon","_ref3","size"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/components/menuAluno/menuAluno.js"],"sourcesContent":["import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { Text } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nimport Perfil from '../../pages/';\r\nimport Aluno from '../../pages/alunoHome/alunoHome';\r\n\r\nexport default function Menu({ navigation }) {\r\n\r\n    function login() {\r\n        let form = {\r\n            email: Email,\r\n            senha: Senha,\r\n        };\r\n\r\n        let uri =\r\n            checked === \"professor\" ? \"http://localhost:3000/professores/login\" : \"http://localhost:3000/alunos/login\";\r\n        let path = checked === \"professor\" ? \"MenuProfessor\" : \"MenuAluno\";\r\n\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n\r\n        fetch(uri, options)\r\n            .then((resp) => {\r\n                if (resp.ok) {\r\n                    return resp.json();\r\n                } else if (resp.status === 401) {\r\n                    setMsg(\"Senha incorreta\")\r\n                    throw new Error(\"Senha incorreta\");\r\n                } else if (resp.status === 404) {\r\n                    setMsg(\"Usuário não encontrado\")\r\n                    throw new Error(\"Usuário não encontrado\");\r\n                } else {\r\n                    setMsg(\"Erro interno do servidor\")\r\n                    throw new Error(\"Erro interno do servidor\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n\r\n                AsyncStorage.setItem(\"nome\", JSON.stringify(data.info));\r\n                AsyncStorage.setItem(\"id_aluno\", data.info.id_aluno);\r\n                AsyncStorage.setItem(\"token\", data.token);\r\n\r\n                navigation.navigate(path);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n\r\n    return (\r\n        <Drawer.Navigator screenOptions={{ headerShown: false }} initialRouteName='Home'>\r\n            <Drawer.Screen name=\"Perfil\" component={Perfil}\r\n                options={{\r\n                    drawerLabel: (() => <Text> Olá, {user.nome} </Text>),\r\n                }}>\r\n            </Drawer.Screen>\r\n            <Drawer.Screen name=\"Home\" component={Aluno}\r\n                options={{\r\n                    drawerLabel: (({ focused }) => <Text style={{ color: focused ? '#000' : '#aaa' }}>Home</Text>),\r\n                    drawerIcon: ({ focused, color, size }) => (<Ionicons name={focused ? 'home' : 'home-outline'} size={size} color={color} />),\r\n                }}>\r\n            </Drawer.Screen>\r\n        </Drawer.Navigator>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}