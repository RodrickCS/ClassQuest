{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from \"react-native-paper\";\nimport { RadioButton } from \"react-native-paper\";\nimport styles from \"../login/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"ciclano@gmail.com\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    Email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"senaha1234\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Senha = _useState4[0],\n    setSenha = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    Msg = _useState6[0],\n    setMsg = _useState6[1];\n  var _useState7 = useState(\"aluno\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    checked = _useState8[0],\n    setChecked = _useState8[1];\n  function cadastro() {\n    navigation.navigate('Cadastro');\n  }\n  function login() {\n    var form = {\n      email: Email,\n      senha: Senha\n    };\n    var uri = checked === \"professor\" ? \"http://localhost:3000/professores/login\" : \"http://localhost:3000/alunos/login\";\n    var path = checked === \"professor\" ? \"MenuProfessor\" : \"MenuAluno\";\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    };\n    fetch(uri, options).then(function (resp) {\n      if (resp.ok) {\n        return resp.json();\n      } else if (resp.status === 401) {\n        setMsg(\"Senha incorreta\");\n        throw new Error(\"Senha incorreta\");\n      } else if (resp.status === 404) {\n        setMsg(\"Usuário não encontrado\");\n        throw new Error(\"Usuário não encontrado\");\n      } else {\n        setMsg(\"Erro interno do servidor\");\n        throw new Error(\"Erro interno do servidor\");\n      }\n    }).then(function (data) {\n      AsyncStorage.setItem(\"nome\", JSON.stringify(data.info));\n      navigation.navigate(path);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsx(View, {\n      style: styles.imagenzinha,\n      children: _jsx(Image, {\n        style: styles.image,\n        source: require(\"../../../assets/logo.png\")\n      })\n    }), _jsxs(View, {\n      style: styles.divInputzinho,\n      children: [_jsx(TextInput, {\n        keyboardType: \"email-address\",\n        style: styles.inputzinho,\n        placeholder: \"Digite o email\",\n        value: Email,\n        onChangeText: function onChangeText(val) {\n          setEmail(val);\n        }\n      }), _jsx(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputzinho,\n        placeholder: \"Digite a senha\",\n        value: Senha,\n        onChangeText: function onChangeText(val1) {\n          setSenha(val1);\n        }\n      }), _jsx(Text, {\n        style: styles.txtErr,\n        children: Msg\n      })]\n    }), _jsxs(View, {\n      style: styles.textinho,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Sou:\"\n      }), _jsx(RadioButton, {\n        value: \"aluno\",\n        status: checked === \"aluno\" ? \"checked\" : \"unchecked\",\n        onPress: function onPress() {\n          return setChecked(\"aluno\");\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Aluno(a)\"\n      }), _jsx(RadioButton, {\n        value: \"professor\",\n        status: checked === \"professor\" ? \"checked\" : \"unchecked\",\n        onPress: function onPress() {\n          return setChecked(\"professor\");\n        }\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Professor(a)\"\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonzinho,\n        onPress: function onPress() {\n          login();\n        },\n        children: _jsx(Text, {\n          style: styles.txtbutton,\n          children: \"Login\"\n        })\n      }), _jsx(Text, {\n        style: styles.txtAbaixo,\n        children: \"ou\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          cadastro();\n        },\n        children: _jsx(Text, {\n          style: styles.txtCad,\n          children: \"Cadastre-se\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useState","AsyncStorage","View","Text","TouchableOpacity","Image","ImageBackground","TextInput","RadioButton","styles","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","Email","setEmail","_useState3","_useState4","Senha","setSenha","_useState5","_useState6","Msg","setMsg","_useState7","_useState8","checked","setChecked","cadastro","navigate","login","form","email","senha","uri","path","options","method","headers","body","JSON","stringify","fetch","then","resp","ok","json","status","Error","data","setItem","info","catch","error","console","style","container","children","source","require","resizeMode","imagem","imagenzinha","image","divInputzinho","keyboardType","inputzinho","placeholder","value","onChangeText","val","secureTextEntry","val1","txtErr","textinho","label","onPress","buttonzinho","txtbutton","txtAbaixo","txtCad"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/login/login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { RadioButton } from \"react-native-paper\";\r\nimport styles from \"../login/style\";\r\n\r\nexport default function Login({ navigation }) {\r\n    const [Email, setEmail] = useState(\"ciclano@gmail.com\");\r\n    const [Senha, setSenha] = useState(\"senaha1234\");\r\n    const [Msg, setMsg] = useState('');\r\n    const [checked, setChecked] = useState(\"aluno\");\r\n\r\n    function cadastro() {\r\n        navigation.navigate('Cadastro');\r\n    }\r\n\r\n    function login() {\r\n        let form = {\r\n            email: Email,\r\n            senha: Senha,\r\n        };\r\n        let uri = checked === \"professor\" ? \"http://localhost:3000/professores/login\" : \"http://localhost:3000/alunos/login\";\r\n        let path = checked === \"professor\" ? \"MenuProfessor\" : \"MenuAluno\";\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n        fetch(uri, options)\r\n            .then((resp) => {\r\n                if (resp.ok) {\r\n                    return resp.json();\r\n                } else if (resp.status === 401) {\r\n                    setMsg(\"Senha incorreta\")\r\n                    throw new Error(\"Senha incorreta\");\r\n                } else if (resp.status === 404) {\r\n                    setMsg(\"Usuário não encontrado\")\r\n                    throw new Error(\"Usuário não encontrado\");\r\n                } else {\r\n                    setMsg(\"Erro interno do servidor\")\r\n                    throw new Error(\"Erro interno do servidor\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                AsyncStorage.setItem(\"nome\", JSON.stringify(data.info));\r\n                navigation.navigate(path);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require(\"../../../assets/fundo.jpg\")} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.imagenzinha}>\r\n                <Image style={styles.image} source={require(\"../../../assets/logo.png\")}/>\r\n            </View>\r\n            <View style={styles.divInputzinho}>\r\n                <TextInput keyboardType=\"email-address\" style={styles.inputzinho} placeholder=\"Digite o email\" value={Email} onChangeText={(val) => { setEmail(val) }}/>\r\n                <TextInput secureTextEntry={true} style={styles.inputzinho} placeholder=\"Digite a senha\" value={Senha} onChangeText={(val1) => { setSenha(val1) }}/>\r\n                <Text style={styles.txtErr}>{Msg}</Text>\r\n            </View>\r\n            <View style={styles.textinho}>\r\n                    <Text style={styles.label}>Sou:</Text>\r\n                    <RadioButton value=\"aluno\" status={checked === \"aluno\" ? \"checked\" : \"unchecked\"} onPress={() => setChecked(\"aluno\")} />\r\n                    <Text style={styles.label}>Aluno(a)</Text>\r\n                    <RadioButton value=\"professor\" status={checked === \"professor\" ? \"checked\" : \"unchecked\"} onPress={() => setChecked(\"professor\")} />\r\n                    <Text style={styles.label}>Professor(a)</Text>\r\n            </View>\r\n            <View>\r\n                <TouchableOpacity style={styles.buttonzinho} onPress={() => { login() }}>\r\n                    <Text style={styles.txtbutton}>Login</Text>\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtAbaixo}>ou</Text>\r\n                <TouchableOpacity onPress={() => { cadastro() }}>\r\n                    <Text style={styles.txtCad}>Cadastre-se</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}