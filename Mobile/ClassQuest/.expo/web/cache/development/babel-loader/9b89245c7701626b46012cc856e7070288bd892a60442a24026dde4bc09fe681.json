{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PerfilAluno(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentImage = _useState2[0],\n    setCurrentImage = _useState2[1];\n  var images = [require(\"../../../../assets/setaBaixo.png\"), require(\"../../../../assets/setaCima.png\")];\n  var switchImage = function switchImage() {\n    setCurrentImage(function (prevImage) {\n      return (prevImage + 1) % images.length;\n    });\n  };\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var handleRotate = function handleRotate() {\n    startRotation();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtEntrar,\n        children: \"Perfil\"\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        children: \"Sair\"\n      })]\n    }), _jsxs(View, {\n      style: styles.dados,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.turma,\n        onPress: switchImage,\n        children: [_jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../../assets/favicon.png\")\n        }), _jsx(Text, {\n          style: styles.titulo,\n          children: \"turminha do aluno\"\n        }), _jsx(Image, {\n          source: images[currentImage],\n          style: styles.image2\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.turma,\n        onPress: switchImage,\n        children: [_jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../../assets/favicon.png\")\n        }), _jsx(Text, {\n          style: styles.titulo,\n          children: \"turminha do aluno\"\n        }), _jsx(Image, {\n          source: images[currentImage],\n          style: styles.image2\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useState","useEffect","styles","jsx","_jsx","jsxs","_jsxs","PerfilAluno","_ref","navigation","_useState","_useState2","_slicedToArray","currentImage","setCurrentImage","images","require","switchImage","prevImage","length","menu","openDrawer","handleRotate","startRotation","user","JSON","parse","localStorage","getItem","View","children","ImageBackground","source","resizeMode","style","imagem","divizinha","TouchableOpacity","onPress","Image","image","Text","txtEntrar","txtSair","dados","turma","titulo","image2"],"sources":["C:/Users/Andreina/Desktop/SENAI/ClassQuest/Mobile/ClassQuest/src/pages/Aluno/perfilAluno/perfilAluno.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport { useState, useEffect } from \"react\";\r\nimport styles from './style'\r\n\r\nexport default function PerfilAluno({ navigation }) {\r\n\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n    const images = [\r\n        require('../../../../assets/setaBaixo.png'),\r\n        require('../../../../assets/setaCima.png'),\r\n    ];\r\n\r\n    const switchImage = () => {\r\n        setCurrentImage((prevImage) => (prevImage + 1) % images.length);\r\n    };\r\n\r\n    \r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    const handleRotate = () => {\r\n        startRotation();\r\n    };\r\n\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    // var id_alu = user.id_aluno\r\n    // var id_aluno = JSON.parse(localStorage.getItem('id_aluno'))\r\n\r\n    // useEffect(() => {\r\n    //     // cadAluno()\r\n    //     setInterval(() => {\r\n    //         // cadAluno()\r\n    //     }, 3000)\r\n    // }, [])\r\n\r\n    // function info() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function update() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function del() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri =`http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtEntrar}>Perfil</Text>\r\n                <Text style={styles.txtSair}>Sair</Text>\r\n            </View>\r\n            {/* {\r\n                info.map((i, index) => { \r\n                    return ( */}\r\n            <View style={styles.dados}\r\n            // key={index}\r\n            >\r\n                <TouchableOpacity style={styles.turma} onPress={switchImage}>\r\n                    <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n                    <Text style={styles.titulo}>turminha do aluno</Text>\r\n                    <Image source={images[currentImage]} style={styles.image2} />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.turma} onPress={switchImage}>\r\n                    <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n                    <Text style={styles.titulo}>turminha do aluno</Text>\r\n                    <Image source={images[currentImage]} style={styles.image2} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            {/* )\r\n                })\r\n            } */}\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}