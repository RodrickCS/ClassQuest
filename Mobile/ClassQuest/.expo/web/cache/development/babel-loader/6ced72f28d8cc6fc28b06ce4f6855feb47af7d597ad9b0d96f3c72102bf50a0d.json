{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from \"react-native-paper\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var navigation = _ref.navigation;\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  var id_prof = user.id_prof;\n  console.log(user);\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtEntrar,\n        children: \"Perfil\"\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        children: \"Sair\"\n      })]\n    }), \"info.map((i, index)=>)\", _jsxs(View, {\n      style: styles.dados,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.turma,\n        children: [_jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        }), _jsx(Text, {\n          style: styles.titulo,\n          children: \"turminha\"\n        }), _jsx(Image, {\n          style: styles.image2,\n          source: require(\"../../../assets/setaBaixo.png\")\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.turma,\n        children: [_jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        }), _jsx(Text, {\n          style: styles.titulo,\n          children: \"turminha\"\n        }), _jsx(Image, {\n          style: styles.image2,\n          source: require(\"../../../assets/setaBaixo.png\")\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","styles","jsx","_jsx","jsxs","_jsxs","Perfil","_ref","navigation","menu","openDrawer","user","JSON","parse","localStorage","getItem","id_prof","console","log","View","children","ImageBackground","source","require","resizeMode","style","imagem","divizinha","TouchableOpacity","onPress","Image","image","Text","txtEntrar","txtSair","dados","turma","titulo","image2"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/perfilProf/perfilProf.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport { TextInput } from \"react-native-paper\";\r\nimport styles from './style'\r\n\r\nexport default function Perfil({ navigation }) {\r\n\r\n    // const [id_prof, setid_prof] = useState('');\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    var id_prof = user.id_prof\r\n\r\n    console.log(user)\r\n\r\n    // function info() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_prof}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function update() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_prof}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function del() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri =`http://localhost:3000/readOne/${id_prof}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtEntrar}>Perfil</Text>\r\n                <Text style={styles.txtSair}>Sair</Text>\r\n            </View>\r\n            info.map((i, index)=>)\r\n            <View style={styles.dados}>\r\n                    <TouchableOpacity style={styles.turma}>\r\n                        <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                        <Text style={styles.titulo}>turminha</Text>\r\n                        <Image style={styles.image2} source={require('../../../assets/setaBaixo.png')} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.turma}>\r\n                        <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                        <Text style={styles.titulo}>turminha</Text>\r\n                        <Image style={styles.image2} source={require('../../../assets/setaBaixo.png')} />\r\n                    </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}"],"mappings":";;;;;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,MAAM;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5B,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAIvC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACfD,UAAU,CAACE,UAAU,CAAC,CAAC;EAC3B,CAAC;EAED,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD,IAAIC,OAAO,GAAGL,IAAI,CAACK,OAAO;EAE1BC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EA8GjB,OACIN,KAAA,CAACc,IAAI;IAAAC,QAAA,GACDjB,IAAA,CAACkB,eAAe;MAACC,MAAM,EAAEC,OAAO,4BAA4B,CAAE;MAACC,UAAU,EAAC,OAAO;MAACC,KAAK,EAAExB,MAAM,CAACyB;IAAO,CAAkB,CAAC,EAC1HrB,KAAA,CAACc,IAAI;MAACM,KAAK,EAAExB,MAAM,CAAC0B,SAAU;MAAAP,QAAA,GAC1BjB,IAAA,CAACyB,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;UAAEpB,IAAI,CAAC,CAAC;QAAC,CAAE;QAAAW,QAAA,EACxCjB,IAAA,CAAC2B,KAAK;UAACL,KAAK,EAAExB,MAAM,CAAC8B,KAAM;UAACT,MAAM,EAAEC,OAAO,8BAA8B;QAAE,CAAE;MAAC,CAChE,CAAC,EACnBpB,IAAA,CAAC6B,IAAI;QAACP,KAAK,EAAExB,MAAM,CAACgC,SAAU;QAAAb,QAAA,EAAC;MAAM,CAAM,CAAC,EAC5CjB,IAAA,CAAC6B,IAAI;QAACP,KAAK,EAAExB,MAAM,CAACiC,OAAQ;QAAAd,QAAA,EAAC;MAAI,CAAM,CAAC;IAAA,CACtC,CAAC,0BAEP,EAAAf,KAAA,CAACc,IAAI;MAACM,KAAK,EAAExB,MAAM,CAACkC,KAAM;MAAAf,QAAA,GAClBf,KAAA,CAACuB,gBAAgB;QAACH,KAAK,EAAExB,MAAM,CAACmC,KAAM;QAAAhB,QAAA,GAClCjB,IAAA,CAAC2B,KAAK;UAACL,KAAK,EAAExB,MAAM,CAAC8B,KAAM;UAACT,MAAM,EAAEC,OAAO,8BAA8B;QAAE,CAAE,CAAC,EAC9EpB,IAAA,CAAC6B,IAAI;UAACP,KAAK,EAAExB,MAAM,CAACoC,MAAO;UAAAjB,QAAA,EAAC;QAAQ,CAAM,CAAC,EAC3CjB,IAAA,CAAC2B,KAAK;UAACL,KAAK,EAAExB,MAAM,CAACqC,MAAO;UAAChB,MAAM,EAAEC,OAAO,gCAAgC;QAAE,CAAE,CAAC;MAAA,CACnE,CAAC,EACnBlB,KAAA,CAACuB,gBAAgB;QAACH,KAAK,EAAExB,MAAM,CAACmC,KAAM;QAAAhB,QAAA,GAClCjB,IAAA,CAAC2B,KAAK;UAACL,KAAK,EAAExB,MAAM,CAAC8B,KAAM;UAACT,MAAM,EAAEC,OAAO,8BAA8B;QAAE,CAAE,CAAC,EAC9EpB,IAAA,CAAC6B,IAAI;UAACP,KAAK,EAAExB,MAAM,CAACoC,MAAO;UAAAjB,QAAA,EAAC;QAAQ,CAAM,CAAC,EAC3CjB,IAAA,CAAC2B,KAAK;UAACL,KAAK,EAAExB,MAAM,CAACqC,MAAO;UAAChB,MAAM,EAAEC,OAAO,gCAAgC;QAAE,CAAE,CAAC;MAAA,CACnE,CAAC;IAAA,CACrB,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}