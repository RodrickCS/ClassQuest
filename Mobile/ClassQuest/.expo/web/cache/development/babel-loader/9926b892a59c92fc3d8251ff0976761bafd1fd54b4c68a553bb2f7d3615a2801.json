{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"../alunoHome/style\";\nimport CardAlunoHome from \"../../../components/cardAlunoHome/cardAlunoHome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Atividade(_ref) {\n  var navigation = _ref.navigation;\n  var menu = function menu() {\n    clearInterval(myInterval);\n    navigation.openDrawer();\n  };\n  var voltar = function voltar() {\n    clearInterval(myInterval);\n    navigation.navigate(\"Login\");\n  };\n  function dados() {\n    return _dados.apply(this, arguments);\n  }\n  function _dados() {\n    _dados = _asyncToGenerator(function* () {\n      try {\n        var userString = yield AsyncStorage.getItem(\"nome\");\n        if (userString) {\n          var user = JSON.parse(userString);\n          var token = user.token;\n          var id_aluno = user.id_aluno;\n          fetch(\"http://localhost:3000/alunos/readOne/\" + id_aluno).then(function (resp) {\n            return resp.json();\n          }).then(function (data) {\n            setInfo(data);\n            console.log();\n          });\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    });\n    return _dados.apply(this, arguments);\n  }\n  var ModalContent = function ModalContent() {\n    return _jsxs(View, {\n      style: styles.modalTotal,\n      children: [_jsx(Text, {\n        style: styles.txtCad,\n        children: \"Digite o codigo da turma:\"\n      }), _jsx(TextInput, {\n        value: Codigo,\n        onChangeText: function onChangeText(val) {\n          setCodigo(val);\n        },\n        style: styles.inputzinho\n      }), _jsxs(View, {\n        style: styles.botoes,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.sairBotao,\n          onPress: function onPress() {\n            return setModalVisible(false);\n          },\n          children: _jsx(Text, {\n            style: styles.txtFechar,\n            children: \"Fechar\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.okBotao,\n          onPress: dados(),\n          children: _jsx(Text, {\n            style: styles.txtOk,\n            children: \"Ok\"\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      children: _jsx(ModalContent, {})\n    }), _jsx(ImageBackground, {\n      source: require(\"../../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.imagenzinha,\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../../assets/favicon.png\")\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(Text, {\n          style: styles.txtEntrar,\n          children: \" Entrar em uma turma \"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          voltar();\n        },\n        children: _jsx(Text, {\n          style: styles.txtSair,\n          children: \"Sair\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.turmas\n    })]\n  });\n}","map":{"version":3,"names":["AsyncStorage","useState","useEffect","View","Text","Modal","TouchableOpacity","Image","ImageBackground","TextInput","Alert","styles","CardAlunoHome","jsx","_jsx","jsxs","_jsxs","Atividade","_ref","navigation","menu","clearInterval","myInterval","openDrawer","voltar","navigate","dados","_dados","apply","arguments","_asyncToGenerator","userString","getItem","user","JSON","parse","token","id_aluno","fetch","then","resp","json","data","setInfo","console","log","error","ModalContent","style","modalTotal","children","txtCad","value","Codigo","onChangeText","val","setCodigo","inputzinho","botoes","sairBotao","onPress","setModalVisible","txtFechar","okBotao","txtOk","container","visible","modalVisible","animationType","transparent","source","require","resizeMode","imagem","divizinha","imagenzinha","image","txtEntrar","txtSair","turmas"],"sources":["C:/Users/Andreina/Desktop/SENAI/ClassQuest/mobile/classquest/src/pages/Aluno/atividades/atividades.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useState, useEffect } from 'react'\r\nimport { View, Text, Modal, TouchableOpacity, Image, ImageBackground, TextInput, Alert } from 'react-native';\r\nimport styles from '../alunoHome/style'\r\nimport CardAlunoHome from '../../../components/cardAlunoHome/cardAlunoHome'\r\n\r\nexport default function Atividade({ navigation }) {\r\n    const menu = () => {\r\n        clearInterval(myInterval);\r\n        navigation.openDrawer();\r\n    };\r\n\r\n    const voltar = () => {\r\n        clearInterval(myInterval);\r\n        navigation.navigate(\"Login\");\r\n    };\r\n\r\n    async function dados() {\r\n        try {\r\n            const userString = await AsyncStorage.getItem(\"nome\");\r\n            if (userString) {\r\n                const user = JSON.parse(userString);\r\n                const token = user.token;\r\n                const id_aluno = user.id_aluno;\r\n                fetch(\"http://localhost:3000/alunos/readOne/\" + id_aluno)\r\n                    .then((resp) => {\r\n                        return resp.json();\r\n                    })\r\n                    .then((data) => {\r\n                        setInfo(data);\r\n                        // setId_turma(data.turma[0].id_turma);\r\n                        console.log();\r\n                    });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n    }\r\n\r\n    const ModalContent = () => {\r\n        return (\r\n            <View style={styles.modalTotal}>\r\n                <Text style={styles.txtCad}>Digite o codigo da turma:</Text>\r\n                <TextInput value={Codigo} onChangeText={(val) => { setCodigo(val) }} style={styles.inputzinho}></TextInput>\r\n                <View style={styles.botoes}>\r\n                    <TouchableOpacity style={styles.sairBotao} onPress={() => setModalVisible(false)}>\r\n                        <Text style={styles.txtFechar}>Fechar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.okBotao} onPress={dados()}>\r\n                        <Text style={styles.txtOk}>Ok</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Modal visible={modalVisible} animationType=\"slide\" transparent>\r\n                <ModalContent />\r\n            </Modal>\r\n            <ImageBackground source={require('../../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity style={styles.imagenzinha} onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => { setModalVisible(!modalVisible) }}>\r\n                    <Text style={styles.txtEntrar}> Entrar em uma turma </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => { voltar() }}>\r\n                    <Text style={styles.txtSair}>Sair</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.turmas}>\r\n                {/* {info.map((att, index) => {\r\n                    return <CardAlunoHome key={index} item={att} />\r\n                })} */}\r\n            </View>\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}