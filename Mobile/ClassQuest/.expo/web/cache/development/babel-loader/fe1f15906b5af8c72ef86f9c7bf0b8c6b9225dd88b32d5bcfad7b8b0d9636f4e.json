{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from \"react-native-paper\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\" + user.id_aluno),\n    _useState2 = _slicedToArray(_useState, 2),\n    id_aluno = _useState2[0],\n    setId_aluno = _useState2[1];\n  var menu = function menu() {\n    navigation.openDrawer();\n  };\n  var user = JSON.parse(localStorage.getItem('nome'));\n  var id_alu = user.id_aluno;\n  console.log(user);\n  return _jsxs(View, {\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/fundo.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.imagem\n    }), _jsxs(View, {\n      style: styles.divizinha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          menu();\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../../../assets/favicon.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.txtSair,\n        children: \"Sair\"\n      })]\n    }), _jsx(View, {\n      style: styles.dados,\n      children: _jsx(TextInput, {\n        style: styles.inputzinho,\n        value: id_aluno,\n        onChangeText: function onChangeText(val1) {\n          setId_aluno(val1);\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["TextInput","styles","jsx","_jsx","jsxs","_jsxs","Perfil","_ref","navigation","_useState","useState","user","id_aluno","_useState2","_slicedToArray","setId_aluno","menu","openDrawer","JSON","parse","localStorage","getItem","id_alu","console","log","View","children","ImageBackground","source","require","resizeMode","style","imagem","divizinha","TouchableOpacity","onPress","Image","image","Text","txtSair","dados","inputzinho","value","onChangeText","val1"],"sources":["C:/Users/Desenvolvimento/Desktop/senai/ClassQuest/Mobile/ClassQuest/src/pages/perfilAluno/perfilAluno.js"],"sourcesContent":["import { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport { TextInput } from \"react-native-paper\";\r\nimport styles from './style'\r\n\r\nexport default function Perfil({ navigation }) {\r\n\r\n    const [id_aluno, setId_aluno] = useState(`${user.id_aluno}`);\r\n\r\n    const menu = () => {\r\n        navigation.openDrawer();\r\n    }\r\n\r\n    var user = JSON.parse(localStorage.getItem('nome'))\r\n    var id_alu = user.id_aluno\r\n    // var id_aluno = JSON.parse(localStorage.getItem('id_aluno'))\r\n\r\n    console.log(user)\r\n\r\n    // function info() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function update() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri = `http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    // function del() {\r\n    //     let form = {\r\n    //         email: Email,\r\n    //         senha: Senha,\r\n    //     };\r\n\r\n    //     let uri =`http://localhost:3000/readOne/${id_aluno}`;\r\n\r\n    //     const options = {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(form),\r\n    //     };\r\n\r\n    //     fetch(uri, options)\r\n    //         .then((resp) => {\r\n    //             if (resp.ok) {\r\n    //                 return resp.json();\r\n    //             } else if (resp.status === 401) {\r\n    //                 throw new Error(\"Senha incorreta\");\r\n    //             } else if (resp.status === 404) {\r\n    //                 throw new Error(\"Usuário não encontrado\");\r\n    //             } else {\r\n    //                 throw new Error(\"Erro interno do servidor\");\r\n    //             }\r\n    //         })\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.error(error);\r\n    //         });\r\n    // }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../../../assets/fundo.jpg')} resizeMode=\"cover\" style={styles.imagem}></ImageBackground>\r\n            <View style={styles.divizinha}>\r\n                <TouchableOpacity onPress={() => { menu() }}>\r\n                    <Image style={styles.image} source={require('../../../assets/favicon.png')} />\r\n                </TouchableOpacity>\r\n                <Text style={styles.txtSair}>Sair</Text>\r\n            </View>\r\n            <View style={styles.dados}>\r\n            <TextInput style={styles.inputzinho} \r\n            // placeholder=`${id_aluno}`\r\n            value={id_aluno}\r\n                    onChangeText={(val1) => {\r\n                        setId_aluno(val1)\r\n                    }}/>\r\n            </View>\r\n        </View>\r\n    )\r\n}"],"mappings":";;;;;;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,MAAM;AAAe,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5B,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEvC,IAAAC,SAAA,GAAgCC,QAAQ,MAAIC,IAAI,CAACC,QAAU,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAArDG,QAAQ,GAAAC,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACfR,UAAU,CAACS,UAAU,CAAC,CAAC;EAC3B,CAAC;EAED,IAAIN,IAAI,GAAGO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD,IAAIC,MAAM,GAAGX,IAAI,CAACC,QAAQ;EAG1BW,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;EA8GjB,OACIN,KAAA,CAACoB,IAAI;IAAAC,QAAA,GACDvB,IAAA,CAACwB,eAAe;MAACC,MAAM,EAAEC,OAAO,4BAA4B,CAAE;MAACC,UAAU,EAAC,OAAO;MAACC,KAAK,EAAE9B,MAAM,CAAC+B;IAAO,CAAkB,CAAC,EAC1H3B,KAAA,CAACoB,IAAI;MAACM,KAAK,EAAE9B,MAAM,CAACgC,SAAU;MAAAP,QAAA,GAC1BvB,IAAA,CAAC+B,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;UAAEnB,IAAI,CAAC,CAAC;QAAC,CAAE;QAAAU,QAAA,EACxCvB,IAAA,CAACiC,KAAK;UAACL,KAAK,EAAE9B,MAAM,CAACoC,KAAM;UAACT,MAAM,EAAEC,OAAO,8BAA8B;QAAE,CAAE;MAAC,CAChE,CAAC,EACnB1B,IAAA,CAACmC,IAAI;QAACP,KAAK,EAAE9B,MAAM,CAACsC,OAAQ;QAAAb,QAAA,EAAC;MAAI,CAAM,CAAC;IAAA,CACtC,CAAC,EACPvB,IAAA,CAACsB,IAAI;MAACM,KAAK,EAAE9B,MAAM,CAACuC,KAAM;MAAAd,QAAA,EAC1BvB,IAAA,CAACH,SAAS;QAAC+B,KAAK,EAAE9B,MAAM,CAACwC,UAAW;QAEpCC,KAAK,EAAE9B,QAAS;QACR+B,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;UACpB7B,WAAW,CAAC6B,IAAI,CAAC;QACrB;MAAE,CAAC;IAAC,CACN,CAAC;EAAA,CACL,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}